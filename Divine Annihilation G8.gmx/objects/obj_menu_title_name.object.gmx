<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_title_name</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12020</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

//==========================//
// Setup name selection grid
//==========================//

//------------------------------------//
// Swapable variables
//-----------------------------------//
maxCharacters = 10;

currentName = "FOX"

gridX = 0;
gridY = 0;

letterString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ!?_";

letterStringWidth = 10;
letterStringHeight = 3;

characterCount = 1;


//------------------------------------//
// Setup spacing
//-----------------------------------//
for (var yy = 0; yy &lt; letterStringHeight; yy ++)
{
    for (var xx = 0; xx &lt; letterStringWidth; xx++)
    {
        if (characterCount &lt;= 29)
        {
            a_letters[xx, yy] = string_char_at(letterString, characterCount);
        }
        else
        {
            a_letters[xx,yy] = "OK"
        }
        characterCount ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

//==========================//
// Define Controls
//==========================//

//------------------------------------//
// Left
//-----------------------------------//
if global.keyMenuLeft
{
    if (gridX - 1) &lt; 0 gridX = (letterStringWidth - 1);
    else gridX --;
}


//------------------------------------//
// Right
//-----------------------------------//
if global.keyMenuRight
{
    if gridX + 1 &gt;= letterStringWidth gridX = 0;
    else gridX ++;
}


//------------------------------------//
// Up
//-----------------------------------//
if global.keyMenuUp
{
    if gridY - 1 &lt; 0 gridY = (letterStringHeight - 1);
    else gridY --;
}


//------------------------------------//
// Down
//-----------------------------------//
if global.keyMenuDown
{
    if gridY + 1 &gt;= letterStringHeight gridY = 0;
    else gridY ++;
}


//------------------------------------//
// Action
//-----------------------------------//
if global.keyAction
{
    var newletter = a_letters[gridX, gridY];
    
    if newletter != "OK"
    {
        if string_length(currentName) &lt;= 10
        {
            currentName += newletter;
            global.playerName = currentName;
        }
    }
    else
    {
    
//------------------------------------//
// Assign name to profile 1
//-----------------------------------//
    if global.saveProfile = "profile1"
    {
        ini_open("profile1.sav");
        ini_write_string("profile1","playerName",currentName);
        ini_close();
        global.playerName = currentName;
    }
    
    
//------------------------------------//
// Assign name to profile 2
//-----------------------------------//
    if global.saveProfile = "profile2"
    {
        ini_open("profile2.sav");
        ini_write_string("profile2","playerName",currentName);
        ini_close();
        global.playerName = currentName;
    }
    
    
//------------------------------------//
// Assign name to profile 3
//-----------------------------------//
    if global.saveProfile = "profile3"
    {
        ini_open("profile3.sav");
        ini_write_string("profile3","playerName",currentName);
        ini_close();
        global.playerName = currentName;
    }
    
    
//------------------------------------//
// Assign name to profile 4
//-----------------------------------//
    if global.saveProfile = "profile4"
    {
        ini_open("profile4.sav");
        ini_write_string("profile4","playerName",currentName);
        ini_close();
        global.playerName = currentName;
    }
    
    room_goto(3);
    }
}


//------------------------------------//
// Second
//-----------------------------------//
if global.keySecond
{
    characterCount = string_length(currentName);
    
    if (characterCount &gt;= 1) currentName = string_delete(currentName, characterCount, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw GUI

//==========================//
// Setup drawing variables
//==========================//
draw_set_font(fnt_menu);
draw_set_color(c_white);
fontSize = font_get_size(fnt_menu);
buffer = ceil(fontSize / 2);


//------------------------------------//
// Name preview coordinates
//-----------------------------------//
startX = 193;
startY = 112;


//------------------------------------//
// Name preview
//-----------------------------------//
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text(startX, startY, currentName);


//------------------------------------//
// Draw letters
//-----------------------------------//
startX = 218;
startY = 245;
var characterCount = 1;

for (var yy = 0; yy &lt; letterStringHeight; yy ++)
{
    for (var xx = 0; xx &lt; letterStringWidth; xx ++)
    {
        var letter = a_letters[xx, yy];
        
        var drawX = startX + (xx * (fontSize * 2));
        var drawY = startY + (yy * (fontSize * buffer));
        
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_text(drawX, drawY, letter);
        
        if (xx == gridX &amp;&amp; yy = gridY) draw_sprite(spr_system_other_nameCursor, 0, drawX, drawY);
        
        characterCount ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>320,320</point>
  </PhysicsShapePoints>
</object>
