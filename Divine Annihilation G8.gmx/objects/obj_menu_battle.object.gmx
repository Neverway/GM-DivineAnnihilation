<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu_textbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12020</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup variables

//==========================//
// Setup
//==========================//
image_index = 0;
image_speed = 0;
global.menuActive = true;

active = true;
menu = "movesetP1";
enemySlot1 = global.enemySlot1;
P1moveset = "none"
P2moveset = "none"
P1target = "none"
P2target = "none"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Re-allow Input

//==========================//
// Setup
//==========================//
active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu control

//==========================//
// Setup scrolling
//==========================//
if menu == "movesetP1" or menu == "movesetP2"
{
    script_execute(scr_menu_scrolling, 0, 1, "vertical");
}


//==========================//
// Assign move P1
//==========================//
if global.keyAction and menu == "movesetP1" and active
{
    if image_index == 0
    {
        // Set P1 move to attack
        P1moveset = "attack"
        menu = "targetP1"
        active = false;
        alarm[0] = 10;
    }
    
    if image_index == 1
    {
        // Set P1 move to defend
        P1moveset = "defend"
        menu = "movesetP2"
        alarm[0] = 10;
        active = false;
    }
}


//==========================//
// Assign move P2
//==========================//
if global.keyAction and menu == "movesetP2" and active
{
    if image_index == 0
    {
        // Set P1 move to attack
        P2moveset = "attack"
        menu = "targetP2"
        active = false;
        alarm[0] = 10;
    }
    
    if image_index == 1
    {
        // Set P1 move to defend
        P2moveset = "defend"
        menu = "battle"
        active = false;
        alarm[0] = 10;
    }
}

//==========================//
// Assign target P1
//==========================//
if global.keyAction and menu == "targetP1" and active
{
    if image_index == 0
    {
        P1target = enemySlot1
        menu = "movesetP2"
        active = false;
        alarm[0] = 10;
    }
}


//==========================//
// Assign target P2
//==========================//
if global.keyAction and menu == "targetP2" and active
{
    if image_index == 0
    {
        P2target = enemySlot1
        menu = "battle"
        active = false;
        alarm[0] = 10;
    }
}


//==========================//
// Reset target
//==========================//
if global.keySecond and active
{
        menu = "movesetP1"
        P1moveset = "none"
        P2moveset = "none"
        P1target = "none"
        P2target = "none"
        active = false;
        alarm[0] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Background

//==========================//
// Setup
//==========================//
draw_sprite(sprite_index, image_index, view_xview, view_yview + 352);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Text

//==========================//
// Setup text
//==========================//
draw_set_font(fnt_menu);
draw_set_color(c_white);
draw_text(view_xview+550, view_yview+93+352, menu);

//==========================//
// MovesetP1 or MovesetP2
//==========================//
if menu == "movesetP1" or menu == "movesetP2"
{
    if image_index == 0
    {
        draw_set_color(c_white);
        draw_text(view_xview+38, view_yview+9+352, "Attack");
        
        draw_set_color(c_gray);
        draw_text(view_xview+38, view_yview+37+352, "Defend");
    }
    
    if image_index == 1
    {
        draw_set_color(c_gray);
        draw_text(view_xview+38, view_yview+9+352, "Attack");
        
        draw_set_color(c_white);
        draw_text(view_xview+38, view_yview+37+352, "Defend");
    }
}

//==========================//
// TargetP1 or TargetP2
//==========================//
if menu == "targetP1" or menu == "targetP2"
{
    if image_index == 0
    {
        draw_set_color(c_white);
        draw_text(view_xview+38, view_yview+9+352, enemySlot1);
    }
}

//==========================//
// TargetP1 or TargetP2
//==========================//
if menu == "battle"
{
    image_index = 0;
    if image_index == 0
    {
        draw_set_color(c_gray);
        draw_text(view_xview+38, view_yview+9+352, "P1moveset: " + P1moveset);
        draw_text(view_xview+38, view_yview+37+352, "P1target: " + P1target);
        draw_text(view_xview+38, view_yview+65+352, "P2moveset: " + P2moveset);
        draw_text(view_xview+38, view_yview+93+352, "P2target: " + P2target);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>320,320</point>
  </PhysicsShapePoints>
</object>
