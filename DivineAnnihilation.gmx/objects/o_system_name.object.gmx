<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.plt = false;
global.pr = false;
global.pu = false;
global.pd = false;

global.pok = false;
global.pcan = false;

maxletters = 10;

currentname = "FOX"

gridx = 0;
gridy = 0;

letterstring = "ABCDEFGHIJKLMNOPQRSTUVWXYZ!? ";

xletters = 10;
yletters = 3;

charactercount = 1;

for (var yy = 0; yy &lt; yletters; yy ++)
{
    for (var xx = 0; xx &lt; xletters; xx++)
    {
        if (charactercount &lt;= 29)
        {
            a_letters[xx, yy] = string_char_at(letterstring, charactercount);
        }
        else
        {
            a_letters[xx,yy] = "OK"
        }
        charactercount ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//==========================//
// Define Controls
//==========================//
kUp = keyboard_check_pressed(vk_up);
kDown = keyboard_check_pressed(vk_down);
kLeft = keyboard_check_pressed(vk_left);
kRight = keyboard_check_pressed(vk_right);
kBack = keyboard_check_pressed(ord("X"));
kSelect = keyboard_check_pressed(ord("Z"));
kMenu = keyboard_check_pressed(ord("C"));


if kLeft
{
    if (gridx - 1) &lt; 0 gridx = (xletters - 1);
    else gridx --;
}

if kRight
{
    if (gridx + 1) &gt;= xletters gridx = 0;
    else gridx ++;
}

if kUp
{
    if (gridy - 1) &lt; 0 gridy = (yletters - 1);
    else gridy --;
}

if kDown
{
    if (gridy + 1) &gt;= yletters gridy = 0;
    else gridy ++;
}


if kSelect
{
    var newletter = a_letters[gridx, gridy];
    
    if newletter != "OK"
    {
        if string_length(currentname) &lt;= 10
        {
            currentname += newletter;
            global.name = currentname;
        }
    }
    else
    {
    
    if global.saveprofile = "profile1"
    {
        ini_open("profile1.sav");
        ini_write_string("profile1","name",currentname);
        ini_close();
        global.name = currentname;
    }
    if global.saveprofile = "profile2"
    {
        ini_open("profile2.sav");
        ini_write_string("profile2","name",currentname);
        ini_close();
        global.name = currentname;
    }
    if global.saveprofile = "profile3"
    {
        ini_open("profile3.sav");
        ini_write_string("profile3","name",currentname);
        ini_close();
        global.name = currentname;
    }
    if global.saveprofile = "profile4"
    {
        ini_open("profile4.sav");
        ini_write_string("profile4","name",currentname);
        ini_close();
        global.name = currentname;
    }
    
    room_goto(4);
    }
}


if kBack
{
    lettercount = string_length(currentname);
    
    if (lettercount &gt;= 1) currentname = string_delete(currentname, lettercount, 1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(f_retro);
draw_set_color(c_white);
fontsize = font_get_size(f_retro);
buffer = ceil(fontsize / 2);

// Draw name
startx = 193;
starty = 112;

draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text(startx, starty, currentname);

// Draw letters
startx = 218;
starty = 245;
var charactercount = 1;

for (var yy = 0; yy &lt; yletters; yy ++){
    for (var xx = 0; xx &lt; xletters; xx ++){
        var letter = a_letters[xx, yy];
        
        var drawx = startx + (xx * (fontsize * 2));
        var drawy = starty + (yy * (fontsize * buffer));
        
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_text(drawx, drawy, letter);
        
        if (xx == gridx &amp;&amp; yy = gridy) draw_sprite(s_system_name_cursor, 0, drawx, drawy);
        
        charactercount ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
